#!/bin/bash -x
# Bring up an AWS VPN interface.

. /etc/init.d/functions
cd /etc/sysconfig/network-scripts
. ./network-functions
[ -f ../network ] && . ../network
CONFIG=$1
need_config "$CONFIG"
source_config

if [ -z "$OUTSIDE_SRC_IPV4" ]; then
    net_log $"Device $DEVICE does not have OUTSIDE_SRC_IPV4 specified."
    exit 1;
fi;

if [ -z "$OUTSIDE_DST_IPV4" ]; then
    net_log $"Device $DEVICE does not have OUTSIDE_DST_IPV4 specified."
    exit 1;
fi;

if [ -z "$INSIDE_SRC_IPV4" ]; then
    net_log $"Device $DEVICE does not have INSIDE_SRC_IPV4 specified."
    exit 1;
fi;

if [ -z "$INSIDE_DST_IPV4" ]; then
    net_log $"Device $DEVICE does not have INSIDE_DST_IPV4 specified."
    exit 1;
fi;

# Make sure CIDR blocks are on the INSIDE_*_IPV4 variables; otherwise default
# to /30.
if ! echo "$INSIDE_SRC_IPV4" | egrep '/[0-9]+$' > /dev/null; then
    INSIDE_SRC_IPV4="$INSIDE_SRC_IPV4/30";
fi;

if ! echo "$INSIDE_DST_IPV4" | egrep '/[0-9]+$' > /dev/null; then
    INSIDE_DST_IPV4="$INSIDE_DST_IPV4/30";
fi;

MARK=${MARK-100}
MTU=${MTU-1419}

# Create the device and set the end-to-end link addresses and MTU.
ip link add "$DEVICE" type vti local "$OUTSIDE_SRC_IPV4" \
    remote "$OUTSIDE_DST_IPV4" key "$MARK" || exit 1
ip address add "$INSIDE_SRC_IPV4" remote "$INSIDE_DST_IPV4" dev "$DEVICE" || \
    { ip link delete "$DEVICE"; exit 1; }
ip link set "$DEVICE" up mtu $MTU || { ip link delete "$DEVICE"; exit 1; }

# Clamp maximum segment size
iptables --wait --table mangle --append FORWARD --out-interface "$DEVICE" \
    --protocol tcp --tcp-flags SYN,RST SYN --jump TCPMSS --clamp-mss-to-pmtu

# Mark incoming packets so they traverse the VTI adapter
iptables --wait --table mangle --append INPUT --protocol esp \
    --source "$OUTSIDE_DST_IPV4"/32 --destination "$OUTSIDE_SRC_IPV4" \
    --jump MARK --set-xmark "$MARK"

# Disable IPsec SPD and allow asymmetric routing.
SYSCTL_DEVICE="$(echo "$DEVICE" | sed -e 's/\./\//g')"
sysctl net.ipv4.conf.$SYSCTL_DEVICE.disable_policy=1 > /dev/null
sysctl net.ipv4.conf.$SYSCTL_DEVICE.rp_filter=2 > /dev/null

exec /etc/sysconfig/network-scripts/ifup-post $CONFIG $2
